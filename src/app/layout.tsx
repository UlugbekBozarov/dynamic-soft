import { Suspense } from "react";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { Box } from "@mui/material";

import { Spinner } from "@/components";

import Sidebar from "./_shared/sidebar/Sidebar";
import Navbar from "./_shared/navbar/Navbar";

import "./globals.css";
import { ReduxWrapper } from "@/provider";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const drawerWidth = 280;

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  let open = true;
  // const [open, setOpen] = useState<boolean>(false);

  const handleOpen = () => {
    open = true;
    // setOpen(true);
  };

  const handleClose = () => {
    open = false;
    // setOpen(false);
  };

  return (
    <ReduxWrapper>
      <html lang="en">
        <body className={inter.className}>
          <Box
            sx={{
              display: "flex",
              // background: get(theme, "palette.background.default"),
            }}
          >
            <Navbar drawerWidth={drawerWidth} />

            <Box
              component="aside"
              sx={{ width: { md: drawerWidth } }}
              aria-label="mailbox folders"
            >
              <Sidebar
              // open={open}
              // onClose={handleClose}
              // drawerWidth={drawerWidth}
              />
            </Box>
            <Box
              component="main"
              sx={{
                flexGrow: 1,
                width: { xs: "100vw", md: `calc(100% - ${drawerWidth}px)` },
                height: "calc(100vh - 76px)",
                marginTop: "76px",
              }}
            >
              {/* {status === "pending" ? (
              <Box
                width="100%"
                height="100%"
                display="flex"
                justifyContent="center"
                alignItems="center"
              >
                <Spinner />
              </Box>
            ) : ( */}
              <Box
                height="100%"
                sx={{
                  overflowY: "auto",
                  padding: {
                    xs: "0px 10px 20px 10px",
                    md: "0px 16px 16px 16px",
                  },
                }}
              >
                <Suspense fallback={<Spinner />}>{children}</Suspense>
              </Box>
              {/* )} */}
            </Box>
          </Box>
        </body>
      </html>
    </ReduxWrapper>
  );
}
